/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Banking;

import Main.DB_Connection;
import Main.LoginPage;
import Main.Method;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 *
 * @author niebz
 */
public class withdraw extends javax.swing.JDialog {

    /**
     * Creates new form Withdraw
     * @param parent
     * @param modal
     */
    public withdraw(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        withdraw_btn = new javax.swing.JButton();
        back_btn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        view_ac_table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        withdraw_btn.setFont(new java.awt.Font("RSU", 0, 18)); // NOI18N
        withdraw_btn.setText("Withdraw");
        withdraw_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                withdraw_btnActionPerformed(evt);
            }
        });

        back_btn.setFont(new java.awt.Font("RSU", 0, 18)); // NOI18N
        back_btn.setText("Back");
        back_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_btnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("RSU", 1, 36)); // NOI18N
        jLabel1.setText("Withdraw");

        jLabel2.setFont(new java.awt.Font("RSU", 0, 24)); // NOI18N
        jLabel2.setText("Select your account : ");

        view_ac_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 4"
            }
        ));
        view_ac_table.setPreferredSize(new java.awt.Dimension(200, 200));
        view_ac_table.setShowGrid(true);
        jScrollPane1.setViewportView(view_ac_table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(178, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(188, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(back_btn, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(withdraw_btn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(withdraw_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(back_btn))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void withdraw_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_withdraw_btnActionPerformed
        // TODO add your handling code here:

        String ac_number = view_ac_table.getValueAt(view_ac_table.getSelectedRow(),1).toString();
        String ac_balance_st = null;
        String query = String.format("SELECT ac_balance FROM account WHERE ac_number = '%s'",ac_number);

        try {
            DB_Connection db = new DB_Connection();
            ResultSet rs = db.getResultSet(query);
            rs.next();
            ac_balance_st = rs.getString(1);
        }catch (SQLException e) {
            Method.displayError("Error : "+e);
        }

        Double money_input = null,ac_balance = null;
        try{
            money_input = Double.parseDouble(JOptionPane.showInputDialog("Amount to deposit : "));
            ac_balance = Double.parseDouble(ac_balance_st) - money_input;
        }catch (Exception e){
            Method.displayError("Please enter your money!");
        }

        boolean temp;

        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        SimpleDateFormat sdfSql = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        String date = sdf.format(new Date());
        String dateSql = sdfSql.format(new Date());

        try{

            query = String.format("SELECT bank_id FROM account WHERE ac_number = '%s'",ac_number);
            DB_Connection db = new DB_Connection();
            ResultSet  rs = db.getResultSet(query);
            rs.next();
            String bank_id = rs.getString(1);

            query = String.format("SELECT bank_balance FROM bank WHERE bank_id = '%s';",bank_id);
            rs = db.getResultSet(query);
            rs.next();
            Double bank_balance = rs.getDouble(1);

            if (money_input > bank_balance) throw new Exception("Your bank not enough money");

            query = String.format("UPDATE account SET ac_balance = '%f' WHERE ac_number = '%s' ;",ac_balance,ac_number);
            temp = db.execute(query);
            query = String.format("INSERT INTO moneywithdraw (wd_money,ac_number) VALUES ('%f','%s');",money_input,ac_number);
            temp = db.execute(query);

            query = String.format("SELECT MAX(wd_id) FROM moneywithdraw ;");
            rs = db.getResultSet(query);
            rs.next();
            String wd_id = rs.getString(1);
            query = String.format("INSERT INTO total_statement (stm_date,type_id,ac_number,banking_id,amount) VALUES ('%s','%d','%s','%s','%f')",dateSql,2,ac_number,wd_id,money_input);
            temp = db.execute(query);

            query = String.format("UPDATE bank SET bank_balance = (SELECT  sum(ac_balance) FROM account WHERE bank_id = '%s') WHERE bank_id ='%s';",bank_id,bank_id);
            temp = db.execute(query);

        }catch (Exception e) {
            temp = false;
        }

        if (temp){
            Method.displayInfo("You have withdrew amount : "+money_input+" à¸¿\nTransaction time : "+date);
            Method.displayInfo("Successful withdraw");
        }
        else Method.displayError("Withdraw failed");

    }//GEN-LAST:event_withdraw_btnActionPerformed

    private void back_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_btnActionPerformed
        // TODO add your handling code here:        
        this.dispose();        
    }//GEN-LAST:event_back_btnActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        setTable();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */

    private void setTable(){

        String current_id = LoginPage.currentid();
        String[] fieldName = {"#","Account Number","Bank"};
        DefaultTableModel model = new DefaultTableModel(fieldName,0);

        String query = String.format("SELECT ac_number , bank.bank_name " +
                "FROM account INNER JOIN bank " +
                "ON account.bank_id = bank.bank_id " +
                "WHERE customer_id = '%s';",current_id);

        try {
            DB_Connection db = new DB_Connection();
            ResultSet rs = db.getResultSet(query);
            int i = 0;
            while (rs.next()){
                i++;
                String ac_number = rs.getString(1);
                String  bank_name = rs.getString(2);
                String[] row = {String.valueOf(i),ac_number,bank_name};

                model.addRow(row);
            }
            db.disconnect();
            view_ac_table.setModel(model);

        }catch(Exception e){
            Method.displayError("Error : "+e);
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(withdraw.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(withdraw.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(withdraw.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(withdraw.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                withdraw dialog = new withdraw(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back_btn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable view_ac_table;
    private javax.swing.JButton withdraw_btn;
    // End of variables declaration//GEN-END:variables
}
